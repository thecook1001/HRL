@namespace HRL.Components

    @if (Value)
    {
        <button type="@ButtonType" id="@Id" disabled="@Disabled" class="btn btn-block @bootstrapColor" style="width:200px"@onclick="SwitchState">@LabelLatched</button>
    }
    else
    {
    <button type="@ButtonType" id="@Id" disabled="@Disabled" class="btn btn-block @bootstrapColor" style="width:200px" @onclick="SwitchState">@Label</button>
    }


@code {
    public enum ButtonTypes
    {
        Button,
        Reset,
        Submit
    }

    public enum ButtonColors
    {
        Blue,
        Grey,
        Green,
        Red,
        Yellow,
        Turquoise,
        Light,
        Dark
    }

    private string bootstrapColor = "";

    [Parameter]
    public ButtonTypes ButtonType { get; set; } = ButtonTypes.Button;

    [Parameter]
    public ButtonColors ButtonColor { get; set; } = ButtonColors.Grey;

    [Parameter]
    public string Id { get; set; } = "Keine ID vergeben";

    [Parameter]
    public string Label { get; set; } = "";

    [Parameter]
    public string LabelLatched { get; set; } = "";

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public bool Latching { get; set; }

    [Parameter]
    public bool Value { get; set; }

    [Parameter]
    public Action<object> OnSwitchState { get; set; }

    private void SwitchState()
    {
        if (Latching)
        {
            Value = !Value;
        }
        else
        {
            Value = true;
        }

        if (OnSwitchState != null )
        {
            OnSwitchState(this);
        }

    }

    public void SetButtonColor(ButtonColors buttonColor)
    {
        this.ButtonColor = buttonColor;
        bootstrapColor = "btn-success";
    }

    protected override void OnInitialized()

    {
        switch (ButtonColor)
        {
            case ButtonColors.Blue:
                {
                    if (!Latching)
                    {
                        LabelLatched = Label;
                    }
                    bootstrapColor = "btn-primary";
                    break;
                }
            case ButtonColors.Grey:
                {
                    if (!Latching)
                    {
                        LabelLatched = Label;
                    }
                    bootstrapColor = "btn-secondary";
                    break;
                }
            case ButtonColors.Green:
                {
                    if (!Latching)
                    {
                        LabelLatched = Label;
                    }
                    bootstrapColor = "btn-success";
                    break;
                }
            case ButtonColors.Red:
                {
                    if (!Latching)
                    {
                        LabelLatched = Label;
                    }
                    bootstrapColor = "btn-danger";
                    break;
                }
            case ButtonColors.Yellow:
                {
                    if (!Latching)
                    {
                        LabelLatched = Label;
                    }
                    bootstrapColor = "btn-warning";
                    break;
                }
            case ButtonColors.Turquoise:
                {
                    if (!Latching)
                    {
                        LabelLatched = Label;
                    }
                    bootstrapColor = "btn-info";
                    break;
                }
            case ButtonColors.Light:
                {
                    if (!Latching)
                    {
                        LabelLatched = Label;
                    }
                    bootstrapColor = "btn-light";
                    break;
                }
            case ButtonColors.Dark:
                {
                    if (!Latching)
                    {
                        LabelLatched = Label;
                    }
                    bootstrapColor = "btn-light";
                    break;
                }
        }
    }


}